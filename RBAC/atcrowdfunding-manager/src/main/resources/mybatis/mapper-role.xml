<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.young.atcrowdfunding.dao.RoleDao" >
	
	<resultMap id="roleMap" type="com.young.atcrowdfunding.bean.Role">
		<id column="role_id" property="roleId" javaType="String"/>
		<result column="name" property="name" javaType="String"/>
		<result column="create_time" property="createTime" javaType="String"/>
		<result column="update_time" property="updateTime" javaType="String"/>
		<result column="is_delete" property="isDelete" javaType="String"/>
	</resultMap>
	
	<select id="pageQueryData" resultMap="roleMap">
		select
		 	* 
		from t_role
		where 1=1
		<if test="isDelete != null">
			and is_delete = #{isDelete}
		</if>	
		<if test="queryText != null">
			and name like concat('%',#{queryText},'%')
		</if>	
		order by create_time desc
		limit #{start} , #{size}
	</select>
	<select id="pageQueryCount" resultType="int">
		select
			count(*)
		from t_role
		where 1=1
		<if test="isDelete != null">
			and is_delete = #{isDelete}
		</if>
		<if test="queryText != null">
			and name like concat('%',#{queryText},'%')
		</if>
	</select>
	
	<insert id="insert">
		insert into t_role(name,create_time) values(#{name},#{createTime})
	</insert>
	
	<insert id="insertRolePermission">
		insert into t_role_permission(roleid, permissionid) values 
		<foreach collection="permissionids" item="permissionid" separator=",">
			( #{roleid}, #{permissionid} )
		</foreach>
		
	</insert>
	
	<select id="queryById" resultMap="roleMap">
		select * from t_role where role_id=#{id}
	</select>
	
	<update id="updateRole">
		update t_role
		<trim prefix="set" suffixOverrides=",">
			<if test="name != null">name = #{name} ,</if>
			<if test="updateTime != null">update_time = #{updateTime}, </if>
			<if test="isDelete != null">is_delete = #{isDelete} ,</if>
		</trim>
		where role_id = #{roleId}
	</update>
	<update id="updateRoleList">
		update t_role set is_delete = #{isDelete} , update_time = #{updateTime} where role_id in
		<foreach collection="roleIdList" item="roleId" open="(" close=")" separator=",">
			#{roleId}
		</foreach>
	</update>
	
	<select id="queryAll" resultMap="roleMap">
		select * from t_role where is_delete = 'n'
	</select>
	

	
</mapper>